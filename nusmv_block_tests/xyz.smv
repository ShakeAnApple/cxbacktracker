MODULE dummy(INP: boolean)
VAR
    x: boolean; -- test comment
    y: boolean;
    z: boolean;
    t: 0..5;
ASSIGN
    init(x) := !INP;
    next(x) := x & next(y);
    init(y) := TRUE;
    next(y) := x | y | next(INP);
    init(z) := FALSE;
    next(z) := INP;
VAR
    --test1: -2..10;
    --test2: { -1, 2, 3 };
    --test2: { 0, 1 };
DEFINE
    OUT := INP;
    RECURSION := RECURSION | RECURSION;
ASSIGN
    init(t) := case
        x: 1 + 1;
        !x: (y ? x : y) ? 1 : 0; -- FIXME
        TRUE: 0;
    esac;
    next(t) := case next(x): next(z) ? 4 : 3; TRUE: t - 2; esac;
DEFINE
    X: boolean := x;
    Y: 0..1 := t + -t - t + (z ? -1 : 1);
    Z: 0..1 := -t;
