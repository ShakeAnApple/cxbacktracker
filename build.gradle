
plugins {
    id 'antlr'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    /* Generate Java code from XSD */
    id 'org.unbroken-dome.xjc' version '1.4.3'
}

apply plugin: 'antlr'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'org.unbroken-dome.xjc'
//apply from: "plugins/javafx.plugin"
//apply plugin: "org.openjfx.javafxplugin"
//apply plugin: 'javafx-gradle-plugin'


javafx {
    version = "11.0.2"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.web' ]
}


xjc {
    includeInMainCompilation = false
}

sourceSets {
    main { java { srcDir xjcGenerate.outputDirectory } }
}

xjcGenerate {
    source = fileTree('src/main/schema') { include '*.xsd' }
    outputDirectory = file('src/main/java')
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile 'org.antlr:antlr4-runtime:4.7.2'
    antlr("org.antlr:antlr4:4.7.2")
    compile 'com.google.code.gson:gson:2.8.2'

    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.0'
    compile 'com.sun.xml.bind:jaxb-osgi:2.4.0-b180830.0438'
    compile 'org.openjfx:javafx-fxml:11.0.2'
    compile "org.openjfx:javafx-base:11.0.2"
    compile "org.openjfx:javafx-graphics:11.0.2"
    compile "org.openjfx:javafx-controls:11.0.2"
    compile "org.openjfx:javafx-fxml:11.0.2"
    compile 'org.openjfx:javafx-web:11.0.2'
}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ['-package', 'grammar']
    outputDirectory = new File("antlr".toString())
}
compileJava.dependsOn generateGrammarSource
sourceSets {
    generated {
        java.srcDir 'antlr'
    }
}
compileJava.source sourceSets.generated.java, sourceSets.main.java

clean {
    delete "antlr"
}

idea {
    module {
        sourceDirs += file("antlr")
    }
}

task basicBlockParserJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Basic block parsing test main class',
                   'Implementation-Version': '0.1',
                   'Main-Class': 'shakeanapple.backtracker.parser.fblockdiagram.fromscratch.nusmvparsing.ParseBlockMain'
    }
    //baseName = 'parse-block'//project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

//compileJava {
//    doFirst {
//        options.compilerArgs = [
//                '--module-path', classpath.asPath,
//                '--add-modules', 'javafx.controls,javafx.fxml,javafx.web'
//        ]
//    }
//}
//
//run {
//    doFirst {
//        jvmArgs = [
//                '--module-path', classpath.asPath,
//                '--add-modules', 'javafx.controls,javafx.fxml,javafx.web'
//        ]
//    }
//}

jar {
    manifest {
        attributes 'Main-Class': 'shakeanapple.backtracker.Main'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}


//jfx {
//    mainClass = 'full.qualified.nameOf.TheMainClass'  // fill me
//    vendor = 'YourName' // fill me
//}
mainClassName = 'shakeanapple.backtracker.Main'
//mainClassName = 'shakeanapple.backtracker.Main'
//mainClassName = 'shakeanapple.backtracker.ui.infrasructure.control.visgraph.visfx.examples.ComplexGraph'

